CC = gcc

OPTIMIZE_FLAG = -O0
WARNING_EQUALLY_ERROR_FLAG = -Werror

COMPILE_FLAGS = -std=c99 -Wall $(WARNING_EQUALLY_ERROR_FLAG) $(OPTIMIZE_FLAG) -g

LIBRARY_LOCATION_FLAG = -L
DLOPEN_FLAG = -ldl

SOURCE_PATH = src
BUILD_PATH = build
BINARY_PATH = bin
LIBRARY_PATH = library

PREFIX_FILE_LIBRARY = lib

MAIN_FILE = main

BINARY_KEY_START = key

EXTENSION_FILE_C_CODE = .c
EXTENSION_FILE_OBJECT = .o
EXTENSION_FILE_STATIC_LIBRARY = .a
EXTENSION_FILE_DYNAMIC_LIBRARY = .so

LD_LIBRARY_PATH = $(pwd)/$(LIBRARY_PATH)

ALL_SOURCES = $(shell find $(SOURCE_PATH)/ -name '*$(EXTENSION_FILE_C_CODE)')

SOURCES = $(filter-out $(SOURCE_PATH)/$(MAIN_FILE)$(EXTENSION_FILE_C_CODE), $(ALL_SOURCES))

OBJECTS = $(SOURCES:$(SOURCE_PATH)/%$(EXTENSION_FILE_C_CODE)=$(BUILD_PATH)/%$(EXTENSION_FILE_OBJECT))

LIB_SOURCES = $(filter-out $(SOURCE_PATH)/$(MAIN_FILE)$(EXTENSION_FILE_C_CODE), $(SOURCES))

RELATIVE_ADRESSING_FLAG = -fPIC

LIBS = $(LIB_SOURCES:$(SOURCE_PATH)/%$(EXTENSION_FILE_C_CODE)=$(LIBRARY_PATH)/$(PREFIX_FILE_LIBRARY)%$(EXTENSION_FILE_DYNAMIC_LIBRARY))

.PHONY: clean all make_path run

all: make_path $(BINARY_PATH)/$(BINARY_KEY_START)

$(BINARY_PATH)/$(BINARY_KEY_START): $(BUILD_PATH)/$(MAIN_FILE)$(EXTENSION_FILE_OBJECT) $(OBJECTS) $(LIBS)
	$(CC) $(COMPILE_FLAGS) $(BUILD_PATH)/$(MAIN_FILE)$(EXTENSION_FILE_OBJECT) -o $(BINARY_PATH)/$(BINARY_KEY_START) $(DLOPEN_FLAG)

$(LIBRARY_PATH)/$(PREFIX_FILE_LIBRARY)%$(EXTENSION_FILE_DYNAMIC_LIBRARY): $(BUILD_PATH)/%$(EXTENSION_FILE_OBJECT)
	gcc -shared $^ -o $@

$(BUILD_PATH)/$(MAIN_FILE)$(EXTENSION_FILE_OBJECT): $(SOURCE_PATH)/$(MAIN_FILE)$(EXTENSION_FILE_C_CODE)
	$(CC) $(COMPILE_FLAGS) $< -c -o $@ $(DLOPEN_FLAG)

# DEATH = death*

$(BUILD_PATH)/%$(EXTENSION_FILE_OBJECT): $(SOURCE_PATH)/%$(EXTENSION_FILE_C_CODE)
	$(CC) $(COMPILE_FLAGS) $< $(RELATIVE_ADRESSING_FLAG) -c -o $@

make_path:
	mkdir $(BINARY_PATH) -p
	mkdir $(BUILD_PATH) -p
	mkdir $(LIBRARY_PATH) -p

clean:
	rm -rf $(BINARY_PATH)
	rm -rf $(BUILD_PATH)
	rm -rf $(LIBRARY_PATH)

run:
	$(LD_FLAG) ./$(BINARY_PATH)/$(BINARY_KEY_START)
